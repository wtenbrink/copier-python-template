name: Sync Copier template

on:
    schedule:
      # Run every day at midnight
        - cron: '0 0 * * *'
    workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
    sync-copier-template:
        name: Sync Copier template
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Configure git
              run: |
                git config --global user.name "Copier update workflow"
                git config --global user.email "copierupdateworkflow@users.noreply.github.com"
            - uses: actions/setup-python@v4
              with:
                  python-version-file: pyproject.toml
            - uses: snok/install-poetry@v1
              with:
                version: ${{ env.POETRY_VERSION }}
                virtualenvs-create: true
                virtualenvs-in-project: true
                installer-parallel: true
            # Load cached venv if dependencies didn't change
            - name: Load cached venv
              id: cached-copier-dependencies
              uses: actions/cache@v3
              with:
                path: .venv
                key: venv-${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ hashFiles('pyproject.toml') }}
            # Otherwise, install dependencies
            - name: Install copier dependencies
              id: install-copier-dependencies
              if: steps.cached-copier-dependencies.outputs.cache-hit != 'true'
              run: |
                poetry lock --no-update
                poetry install --only copier --no-interaction --no-root
            # Sync template
            - name: Sync template
              env:
                GH_TOKEN: ${{ github.token }}
                PR_BRANCH: copier-update-${{ github.run_id }}
                THIS_WORKFLOW_PATH: ./.github/workflows/sync-copier.yaml
              run: |
                if [[ "$(git status --porcelain)" ]]; then
                    git checkout -b ${{ env.PR_BRANCH }}
                    git add .
                    git commit -m "Update lockfile"
                    git push origin ${{ env.PR_BRANCH }}
                fi
                
                poetry run copier update --skip-answered
                
                if [[ "$(git status --porcelain)" ]]; then
                  if [[ "$(git rev-parse --abbrev-ref HEAD)" != "${{ env.PR_BRANCH }}" ]]; then
                    git checkout -b ${{ env.PR_BRANCH }}
                  fi
                  # Exclude this file from being updated while running
                  git add -- . :!${{ env.THIS_WORKFLOW_PATH }}
                  git commit -m "Sync Copier template"
                  git push origin ${{ env.PR_BRANCH }}
                fi

                if [[ "$(git rev-parse --abbrev-ref HEAD)" == "${{ env.PR_BRANCH }}" ]]; then
                  PR_BODY="Sync Copier template"
                  if [[ "$(git diff ${{ env.THIS_WORKFLOW_PATH }})" ]]; then
                    PR_BODY="${PR_BODY}\n ${{ env.THIS_WORKFLOW_PATH }} is out of sync, this needs to be updated manually by checking out this branch and running \`copier update -A\`."
                  fi
                  gh pr create --title "Sync Copier template" \
                  --body "Sync Copier template" \
                  --base ${{ github.ref_name }} \
                  --head ${{ env.PR_BRANCH }}
                  gh pr merge ${{ env.PR_BRANCH }} --auto --squash --delete-branch
                fi